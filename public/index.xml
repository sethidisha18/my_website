<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Portfolio Website for Disha</title>
    <link>/</link>
    <description>Recent content on Portfolio Website for Disha</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 31 Oct 2017 22:27:21 -0500</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>About Me</title>
      <link>/blogs/blog9/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>/blogs/blog9/</guid>
      <description>Hi! I am Disha Sethi, a Masters in Financial Analysis student at London Business School.I am from Jaipur, India. I love reading crime thrillers and autobiographies. A book I recently read and highly recommend is Canâ€™t Hurt Me by David Goggins. During my time at LBS, I have been experimenting with coding in R and this website shows a few of the projects I have been working on. Fun fact: The pictures that appear on all the tiles have been clicked by me on my most recent trip!</description>
    </item>
    
    <item>
      <title>Atheism Index</title>
      <link>/blogs/blog7/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>/blogs/blog7/</guid>
      <description>The dataatheism &amp;lt;- read_csv(here::here(&amp;quot;data&amp;quot;, &amp;quot;atheism.csv&amp;quot;))## Parsed with column specification:## cols(## nationality = col_character(),## response = col_character(),## year = col_double()## )What does each row of Table 6 correspond to? What does each row ofatheism correspond to?Each row of Table 6 corresponds to a country and how it is segmented based on religious preferences and each row of atheism dataset corresponds to the response and the year it was made.</description>
    </item>
    
    <item>
      <title>campaign</title>
      <link>/projects/project1/blog5/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>/projects/project1/blog5/</guid>
      <description>## Rows: 1,292,843## Columns: 4## $ cand_nm &amp;lt;chr&amp;gt; &amp;quot;Clinton, Hillary Rodham&amp;quot;, &amp;quot;Clinton, Hillary Rodh...## $ contb_receipt_amt &amp;lt;dbl&amp;gt; 50.00, 200.00, 5.00, 48.33, 40.00, 244.34, 35.00,...## $ zip &amp;lt;dbl&amp;gt; 94939, 93428, 92337, 95334, 93011, 95826, 90278, ...## $ contb_date &amp;lt;date&amp;gt; 2016-04-26, 2016-04-20, 2016-04-02, 2016-11-21, ...# Top 10 Candidates with highest Contribution total_contrb&amp;lt;-CA_contributors_2016 %&amp;gt;%group_by(cand_nm) %&amp;gt;%summarise(Total_contb=sum(contb_receipt_amt)) %&amp;gt;%arrange(desc(Total_contb)) %&amp;gt;%mutate(highlight_clinton = ifelse(cand_nm == &amp;#39;Clinton, Hillary Rodham&amp;#39;, T, F)) %&amp;gt;% ggplot(top_10_candidates,mapping=aes(x=Total_contb/10^6, y=reorder(cand_nm,Total_contb))) +geom_col(aes(fill=highlight_clinton)) +labs(title= &amp;quot;Candidates with highest contribution&amp;quot;, x= &amp;quot;Total Contribution in million $&amp;quot;,y=&amp;quot;&amp;quot;)+theme_classic()+scale_fill_manual(values = c(&amp;#39;#595959&amp;#39;, &amp;#39;blue&amp;#39;))+theme(legend.</description>
    </item>
    
    <item>
      <title>Financial Stocks in DJIA Index</title>
      <link>/blogs/blog8/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>/blogs/blog8/</guid>
      <description>Returns of financial stockslibrary(tidyverse) # Load ggplot2, dplyr, and all the other tidyverse packageslibrary(mosaic)library(ggthemes)library(lubridate)library(fivethirtyeight)library(here)library(skimr)library(janitor)library(vroom)library(tidyquant)library(rvest) # scrape websiteslibrary(purrr) library(lubridate) #to handle datesnyse &amp;lt;- read_csv(here::here(&amp;quot;data&amp;quot;,&amp;quot;nyse.csv&amp;quot;))Tabulating NYSE companies by sectorsector_count &amp;lt;- nyse %&amp;gt;% group_by(sector) %&amp;gt;% count() %&amp;gt;% arrange(desc(n)) #to create a table showing number of companies per sectorsector_count #displays the table## # A tibble: 12 x 2## # Groups: sector [12]## sector n## &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt;## 1 Finance 97## 2 Consumer Services 79## 3 Public Utilities 60## 4 Capital Goods 45## 5 Health Care 45## 6 Energy 42## 7 Technology 40## 8 Basic Industries 39## 9 Consumer Non-Durables 31## 10 Miscellaneous 12## 11 Transportation 10## 12 Consumer Durables 8 ggplot(sector_count, mapping = aes(y = reorder(sector,n), x = n)) +geom_col()+theme_bw()+labs(x = &amp;quot;Number of companies&amp;quot;,y= &amp;quot;&amp;quot; ,title = &amp;quot;Number of companies in the NYSE by sector&amp;quot;,caption = &amp;quot;Source: NYSE&amp;quot;) #chart showing number of companies per sectorPreparing the DJIA DatasetSource: Dow Jones Industrial Aveareg (DJIA)Contains stocks and their ticker symbols from the Dow Jones Industrial Average as well as SPY which is an SP500 ETF (Exchange Traded Fund), which we added.</description>
    </item>
    
    <item>
      <title>TfL Bike Sharing</title>
      <link>/blogs/blog11/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>/blogs/blog11/</guid>
      <description>Excess rentals in TfL bike sharingurl &amp;lt;- &amp;quot;https://data.london.gov.uk/download/number-bicycle-hires/ac29363e-e0cb-47cc-a97a-e216d900a6b0/tfl-daily-cycle-hires.xlsx&amp;quot;# Download TFL data to temporary filehttr::GET(url, write_disk(bike.temp &amp;lt;- tempfile(fileext = &amp;quot;.xlsx&amp;quot;)))## Response [https://airdrive-secure.s3-eu-west-1.amazonaws.com/london/dataset/number-bicycle-hires/2020-09-18T09%3A06%3A54/tfl-daily-cycle-hires.xlsx?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;amp;X-Amz-Credential=AKIAJJDIMAIVZJDICKHA%2F20201019%2Feu-west-1%2Fs3%2Faws4_request&amp;amp;X-Amz-Date=20201019T193055Z&amp;amp;X-Amz-Expires=300&amp;amp;X-Amz-Signature=51ec174142f849609f81b5c7b22ec57040ac2d73bb9426e42e0533584077491a&amp;amp;X-Amz-SignedHeaders=host]## Date: 2020-10-19 19:30## Status: 200## Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet## Size: 165 kB## &amp;lt;ON DISK&amp;gt; C:\Users\dsethi1\AppData\Local\Temp\RtmpMPr15v\filefa03af16145.xlsx# Use read_excel to read it as dataframebike0 &amp;lt;- read_excel(bike.temp,sheet = &amp;quot;Data&amp;quot;,range = cell_cols(&amp;quot;A:B&amp;quot;))# change dates to get year, month, and weekbike &amp;lt;- bike0 %&amp;gt;% clean_names() %&amp;gt;% rename (bikes_hired = number_of_bicycle_hires) %&amp;gt;% mutate (year = year(day),month = lubridate::month(day, label = TRUE),week = isoweek(day))expected_per_month &amp;lt;- bike %&amp;gt;% filter(year&amp;gt;=2015 &amp;amp; year&amp;lt;=2019) %&amp;gt;% group_by(month) %&amp;gt;%summarize(expected_per_month = mean(bikes_hired)) bike %&amp;gt;%filter(year&amp;gt;=2015) %&amp;gt;%group_by(year, month) %&amp;gt;%summarize(mean_per_month = mean(bikes_hired)) %&amp;gt;% left_join(expected_per_month) %&amp;gt;% ggplot(aes(x = month, group = 1)) +geom_line(aes(y = mean_per_month)) +geom_line(aes(y = expected_per_month), colour = &amp;quot;blue&amp;quot;,size = 0.</description>
    </item>
    
    <item>
      <title>Tidying WHO Data</title>
      <link>/blogs/blog6/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>/blogs/blog6/</guid>
      <description>Exercise in Tidying datalibrary(tidyverse)library(tidyr)#viewing tablestable1## # A tibble: 6 x 4## country year cases population## &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;## 1 Afghanistan 1999 745 19987071## 2 Afghanistan 2000 2666 20595360## 3 Brazil 1999 37737 172006362## 4 Brazil 2000 80488 174504898## 5 China 1999 212258 1272915272## 6 China 2000 213766 1280428583table2## # A tibble: 12 x 4## country year type count## &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt;## 1 Afghanistan 1999 cases 745## 2 Afghanistan 1999 population 19987071## 3 Afghanistan 2000 cases 2666## 4 Afghanistan 2000 population 20595360## 5 Brazil 1999 cases 37737## 6 Brazil 1999 population 172006362## 7 Brazil 2000 cases 80488## 8 Brazil 2000 population 174504898## 9 China 1999 cases 212258## 10 China 1999 population 1272915272## 11 China 2000 cases 213766## 12 China 2000 population 1280428583table3## # A tibble: 6 x 3## country year rate ## * &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; ## 1 Afghanistan 1999 745/19987071 ## 2 Afghanistan 2000 2666/20595360 ## 3 Brazil 1999 37737/172006362 ## 4 Brazil 2000 80488/174504898 ## 5 China 1999 212258/1272915272## 6 China 2000 213766/1280428583table4a## # A tibble: 3 x 3## country `1999` `2000`## * &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;## 1 Afghanistan 745 2666## 2 Brazil 37737 80488## 3 China 212258 213766table4b## # A tibble: 3 x 3## country `1999` `2000`## * &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;## 1 Afghanistan 19987071 20595360## 2 Brazil 172006362 174504898## 3 China 1272915272 1280428583# Compute rate per 10,000modtable1&amp;lt;-table1 %&amp;gt;% mutate(rate = cases / population * 10000)# Compute cases per yeartable1 %&amp;gt;% count(year, wt = cases)## # A tibble: 2 x 2## year n## &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;## 1 1999 250740## 2 2000 296920# Visualise changes in TB cases over time from 1999 to 2000library(ggplot2)ggplot(table1, aes(year, cases)) + geom_line(aes(group = country), colour = &amp;quot;grey50&amp;quot;) + geom_point(aes(colour = country))how are the variables and observations organised in each of the sample tables?</description>
    </item>
    
    <item>
      <title>U.S. Elections 2016</title>
      <link>/blogs/blog5/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>/blogs/blog5/</guid>
      <description>## Rows: 1,292,843## Columns: 4## $ cand_nm &amp;lt;chr&amp;gt; &amp;quot;Clinton, Hillary Rodham&amp;quot;, &amp;quot;Clinton, Hillary Rodh...## $ contb_receipt_amt &amp;lt;dbl&amp;gt; 50.00, 200.00, 5.00, 48.33, 40.00, 244.34, 35.00,...## $ zip &amp;lt;dbl&amp;gt; 94939, 93428, 92337, 95334, 93011, 95826, 90278, ...## $ contb_date &amp;lt;date&amp;gt; 2016-04-26, 2016-04-20, 2016-04-02, 2016-11-21, ...# Top 10 Candidates with highest Contribution total_contrb&amp;lt;-CA_contributors_2016 %&amp;gt;%group_by(cand_nm) %&amp;gt;%summarise(Total_contb=sum(contb_receipt_amt)) %&amp;gt;%arrange(desc(Total_contb)) %&amp;gt;%mutate(highlight_clinton = ifelse(cand_nm == &amp;#39;Clinton, Hillary Rodham&amp;#39;, T, F)) %&amp;gt;% ggplot(top_10_candidates,mapping=aes(x=Total_contb/10^6, y=reorder(cand_nm,Total_contb))) +geom_col(aes(fill=highlight_clinton)) +labs(title= &amp;quot;Candidates with highest contribution&amp;quot;, x= &amp;quot;Total Contribution in million $&amp;quot;,y=&amp;quot;&amp;quot;)+theme_classic()+scale_fill_manual(values = c(&amp;#39;#595959&amp;#39;, &amp;#39;blue&amp;#39;))+theme(legend.</description>
    </item>
    
    <item>
      <title>Yield Curve Inversion</title>
      <link>/blogs/blog10/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>/blogs/blog10/</guid>
      <description>Yield Curve inversionAt the end of this challenge, I will produce a chart that uses the FRED database to downlaod historical yield curve rates and plot the yield curves since 1999.
# Get a list of FRED codes for US rates and US yield curve; choose monthly frequency# to see, eg., the 3-month T-bill https://fred.stlouisfed.org/series/TB3MStickers &amp;lt;- c(&amp;#39;TB3MS&amp;#39;, # 3-month Treasury bill (or T-bill)&amp;#39;TB6MS&amp;#39;, # 6-month&amp;#39;GS1&amp;#39;, # 1-year&amp;#39;GS2&amp;#39;, # 2-year, etc.</description>
    </item>
    
    <item>
      <title>Hello R Markdown</title>
      <link>/post/2015-07-23-r-rmarkdown/</link>
      <pubDate>Thu, 23 Jul 2015 21:13:14 -0500</pubDate>
      
      <guid>/post/2015-07-23-r-rmarkdown/</guid>
      <description>R MarkdownThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.
You can embed an R code chunk like this:
summary(cars)## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.</description>
    </item>
    
  </channel>
</rss>
